plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'application'
}

application {
    mainClass = 'com.theothermattm.ApplicationKt'
}

jar {
    archiveBaseName = 'jvm-jargon-generator'
    archiveVersion = '1.0'
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    // include all dependencies
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

group 'com.theothermattm.jvm-jargon-generator'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://kotlin.bintray.com/kotlinx"
    }
    maven { url = uri("https://maven.pkg.jetbrains.space/public/p/ktor/eap") }
}

dependencies {
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    implementation "io.ktor:ktor-mustache:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-serialization:$ktor_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlin_serialization"
    implementation("org.jetbrains.exposed:exposed-core:$exposed_version")
    implementation("org.jetbrains.exposed:exposed-dao:$exposed_version")
    implementation("org.jetbrains.exposed:exposed-jdbc:$exposed_version")
    implementation("org.postgresql:postgresql:42.5.0")
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}